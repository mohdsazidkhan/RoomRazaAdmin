{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/actions.js","redux/crud/selectors.js","request/request.js","components/Loading/index.jsx","utils/helpers.js","utils/uinqueId.js","layout/DefaultLayout/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","forms/CustomerForm.jsx","utils/inverseColor.js","modules/CustomCrudModule/DataTable.jsx","modules/CustomCrudModule/CrudDataTable.jsx","modules/CustomCrudModule/index.jsx","pages/SelectCustomer.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","crud","resetState","a","resetAction","actionType","keyState","payload","currentItem","data","currentAction","list","entity","currentPage","request","page","success","result","items","pagination","current","parseInt","pageSize","total","count","create","jsonData","read","itemId","update","delete","search","source","option","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectItemById","find","item","_id","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","headersInstance","ACCESS_TOKEN_NAME","tokenCookies","get","axiosInstance","axios","baseURL","API_BASE_URL","timeout","headers","defaults","post","response","successHandler","errorHandler","id","patch","filter","equal","query","fields","question","cancelToken","token","entityUrl","CancelToken","Loading","isLoading","antIcon","style","fontSize","spin","indicator","spinning","valueByString","obj","string","devider","split","map","key","reduce","o","x","join","Object","byString","s","replace","i","n","length","k","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","DefaultLayout","CollapseBoxButton","onChange","title","className","onClick","TopCollapseBox","isOpen","show","display","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","width","marginLeft","Sider","Layout","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","trigger","MenuOutlined","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","background","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","padding","margin","maxWidth","DashboardLayout","CreateForm","formElements","useDispatch","useSelector","isSuccess","Form","useForm","form","resetFields","layout","onFinish","fieldsValue","birthday","format","date","Item","htmlType","UpdateForm","dayjs","setFieldsValue","DeleteModal","entityDisplayLabels","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","ReadItem","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","push","label","itemsList","gutter","SearchItem","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","onSelect","onSearch","searchText","clearTimeout","currentValue","notFoundContent","allowClear","placeholder","suffix","CustomerForm","isUpdateForm","name","rules","required","message","paddingRight","paddingLeft","inverseColor","hex","indexOf","slice","DataTable","DropDownRowMenu","AddNewItem","inputColorRef","selectedRowKeys","setSelectedRowKeys","tableItemsList","setTableItemsList","coloredRow","setColoredRow","openColorBox","click","handelColorChange","e","tmpObj","target","MakeNewColor","position","ref","top","dataTableColumns","dataTableTitle","newDataTableColumns","render","text","row","color","overlay","EllipsisOutlined","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","listIds","firstRow","setFirstRow","setSelect","rowSelection","selectedKeys","selectedRows","hideSelectAll","columnWidth","renderCell","checked","record","index","originNode","onBack","window","history","back","ghost","extra","columns","rowKey","onRow","rowIndex","onMouseDown","onMouseEnter","selectedRange","onMouseUp","ellipsis","size","dataSource","loading","icon","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","FixHeaderPanel","marginBottom","panelTitle","block","PlusOutlined","CustomCrudModule","createForm","updateForm","useLayoutEffect","SelectCustomer","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE"],"mappings":"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","file":"static/js/SelectCustomerPage.00e55906.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log(\"readBox open\");\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log(\"readBox close\");\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    console.log(\"jsonData action redux\", jsonData);\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\n\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\n\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    ...headersInstance,\n  },\n});\n\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    console.log(\"jsonData\", jsonData);\n    try {\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(\n        entity + \"/update/\" + id,\n        jsonData\n      );\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async (entity, id, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async (entity, source, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      }\n      // headersInstance.cancelToken = source.token;\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\n        cancelToken: source.token,\n      });\n\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    console.log(tokenCookies.get());\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n\n      const response = await axiosInstance.get(entity + \"/list\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async (entityUrl, jsonData, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async (entityUrl) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async (entityUrl, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  let a = s.split(\".\");\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      zeroWidthTriggerStyle={{\n        right: \"-60px\",\n   \n      }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\n//import HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          {/* <HeaderContent /> */}\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n//import HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      {/* <HeaderContent /> */}\n      <Content\n        style={{\n          padding: \"20px\",\n          width: \"100%\",\n          maxWidth: \"1100px\",\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          date: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    const id = current._id;\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    console.log(\"currentResult :\", currentResult);\n    console.log(\"readColumns :\", readColumns);\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  console.log(\"itemsList :\", itemsList);\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function SearchItem({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React from \"react\";\nimport { Button, Form, Input } from \"antd\";\n\nexport default function CustomerForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        label=\"company Name\"\n        name=\"company\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your company name!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Surname\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your surname!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingRight: \"5px\",\n        }}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your manager name!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingLeft: \"5px\",\n        }}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your phone!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </>\n  );\n}\n","export default function inverseColor(hex) {\n  if (hex.indexOf(\"#\") === 0) {\n    hex = hex.slice(1);\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  if (hex.length !== 6) {\n    throw new Error(\"Invalid HEX color.\");\n  }\n  var r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16);\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"#000000\" : \"#FFFFFF\";\n}\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Dropdown, Button, PageHeader, Table, Input } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uinqueId\";\nimport inverseColor from \"@/utils/inverseColor\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  const inputColorRef = useRef(null);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [tableItemsList, setTableItemsList] = useState([]);\n  const [coloredRow, setColoredRow] = useState({});\n\n  const openColorBox = () => {\n    inputColorRef.current.click();\n  };\n  const handelColorChange = (e) => {\n    const tmpObj = {};\n    const tmpColoredRows = selectedRowKeys.map((x) => {\n      tmpObj[x] = e.target.value;\n    });\n\n    setColoredRow({ ...coloredRow, ...tmpObj });\n    setSelectedRowKeys([]);\n  };\n  function MakeNewColor() {\n    return (\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        <Button onClick={openColorBox}>Make new Color</Button>\n        <input\n          type=\"color\"\n          ref={inputColorRef}\n          onChange={handelColorChange}\n          style={{\n            opacity: 0,\n            position: \"absolute\",\n            left: 0,\n            top: \"10px\",\n            width: \"100%\",\n          }}\n        />\n      </div>\n    );\n  }\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  const newDataTableColumns = dataTableColumns.map((obj) => ({\n    ...obj,\n    render: (text, row) => {\n      return {\n        props: {\n          style: {\n            background: coloredRow[row._id] ? coloredRow[row._id] : \"\",\n            color: coloredRow[row._id] ? inverseColor(coloredRow[row._id]) : \"\",\n          },\n        },\n        children: text,\n      };\n    },\n  }));\n  dataTableColumns = [\n    ...newDataTableColumns,\n    {\n      title: \"\",\n      render: (row) => {\n        return {\n          props: {\n            style: {\n              background: coloredRow[row._id] ? coloredRow[row._id] : \"\",\n              color: coloredRow[row._id]\n                ? inverseColor(coloredRow[row._id])\n                : \"\",\n            },\n          },\n          children: (\n            <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n              <EllipsisOutlined\n                style={{ cursor: \"pointer\", fontSize: \"24px\" }}\n              />\n            </Dropdown>\n          ),\n        };\n      },\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } =\n    useSelector(selectListItems);\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  useEffect(() => {\n    const listIds = items.map((x) => x._id);\n    setTableItemsList(listIds);\n  }, [items]);\n\n  const [firstRow, setFirstRow] = useState();\n\n  const [onSelect, setSelect] = useState(false);\n  const onClickRow = (record, rowIndex) => {\n    return {\n      onClick: () => {\n        // const exist = selectedRowKeys.includes(record._id);\n        // if (exist) {\n        //   let filtered = selectedRowKeys.filter(function (value) {\n        //     return value != record._id;\n        //   });\n        //   setSelectedRowKeys(filtered);\n        // } else {\n        //   setSelectedRowKeys([...selectedRowKeys, record._id]);\n        // }\n      },\n      onMouseDown: () => {\n        setFirstRow(rowIndex);\n        setSelectedRowKeys([record._id]);\n        setSelect(true);\n      },\n      onMouseEnter: () => {\n        if (onSelect) {\n          const selectedRange = tableItemsList.slice(firstRow, rowIndex + 1);\n          setSelectedRowKeys(selectedRange);\n        }\n      },\n      onMouseUp: () => {\n        setSelect(false);\n      },\n    };\n  };\n\n  const handelColorRow = (checked, record, index, originNode) => {\n    return {\n      props: {\n        style: {\n          background: coloredRow[record._id] ? coloredRow[record._id] : \"\",\n        },\n      },\n      // children: originNode,\n    };\n  };\n\n  const onSelectChange = (selectedKeys, selectedRows) => {\n    setSelectedRowKeys(selectedKeys);\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    hideSelectAll: true,\n    columnWidth: 0,\n\n    renderCell: handelColorRow,\n    selectedRowKeys: selectedRowKeys,\n  };\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <MakeNewColor key={`${uniqueId()}`} config={config} />,\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        rowSelection={rowSelection}\n        onRow={onClickRow}\n        ellipsis={true}\n        // rowClassName={setRowClassName}\n        size={\"small\"}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport DataTable from \"./DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport CrudDataTable from \"./CrudDataTable\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default function CustomCrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n","import React from \"react\";\n\nimport CustomCrudModule from \"@/modules/CustomCrudModule\";\nimport CustomerForm from \"@/forms/CustomerForm\";\n\nfunction SelectCustomer() {\n  const entity = \"client\";\n  const searchConfig = {\n    displayLabels: [\"company\", \"surname\", \"name\"],\n    searchFields: \"company,surname,name\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"SelectCustomer Panel\";\n  const dataTableTitle = \"Customers Lists\";\n  const entityDisplayLabels = [\"company\"];\n\n  const readColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Manager Surname\",\n      dataIndex: \"surname\",\n    },\n    {\n      title: \"Manager Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n    },\n  ];\n  const dataTableColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Manager Surname\",\n      dataIndex: \"surname\",\n    },\n    {\n      title: \"Manager Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n  ];\n\n  const ADD_NEW_ENTITY = \"Add new customer\";\n  const DATATABLE_TITLE = \"customers List\";\n  const ENTITY_NAME = \"customer\";\n  const CREATE_ENTITY = \"Create customer\";\n  const UPDATE_ENTITY = \"Update customer\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CustomCrudModule\n      createForm={<CustomerForm />}\n      updateForm={<CustomerForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n\nexport default SelectCustomer;\n"],"sourceRoot":""}